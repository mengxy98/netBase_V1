<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="deviceManagerment">
	
	<select id="findTypeDevice" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    select t1.id,t1.segId,tk.sName,t1.deviceName,t1.operator,t2.name as deviceType,t1.frontDistance,
	    	   t1.height,t1.width,t1.isShake,t1.ip,t1.remark,t1.createTime as time
				from sc_device t1
				join sc_dic t2 on t1.deviceType=t2.id
				left join sc_segment tk on t1.segId=tk.sid
				where 1=1
				<isNotEmpty prepend="and" property="deviceType">
					 <isNotEqual property="deviceType" compareValue="0">
					   t1.deviceType=#deviceType#
					</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="and" property="deviceName">
					t1.deviceName like '%$deviceName$%'
				</isNotEmpty>
				<isNotEmpty prepend="and" property="deviceIp">
					t1.ip = #deviceIp#
				</isNotEmpty>
				<isNotEmpty property="order">
					order by $order$
				</isNotEmpty>
				<isNotEmpty property="orderDes">
					$orderDes$
				</isNotEmpty>
				<isNotEmpty property="start">
					limit #start#
					<isNotEmpty prepend="," property="size">
						#size#
					</isNotEmpty>
				</isNotEmpty>
	</select>
	<select id="findTypeDeviceCount" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	    select  count(1)
				from sc_device t1
				join sc_dic t2 on t1.deviceType=t2.id
				where 1=1
				<isNotEmpty prepend="and" property="deviceType">
			        <isNotEqual property="deviceType" compareValue="0">
					   t1.deviceType=#deviceType#
					</isNotEqual>
				 </isNotEmpty>
				<isNotEmpty prepend="and" property="deviceName">
					t1.deviceName like '%$deviceName$%'
				</isNotEmpty>
	</select>
	
	<select id="findTaskDeviceList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	   	select * from (
	   			select DISTINCT t2.id as taskId,t2.taskName,t1.id as deviceId,t1.deviceName
				 from 
						sc_device t1,
						sc_taskdeviceref ref,
						sc_task t2
					 where  1=1
				            and t1.id = ref.devid
							and t2.id = ref.tid
				<isNotEmpty prepend="and" property="taskName">
					t2.taskName like '%$taskName$%'
				</isNotEmpty>
				<isNotEmpty prepend="and" property="deviceName">
					t1.deviceName like '%$deviceName$%'
				</isNotEmpty>
				<isNotEmpty prepend="and" property="beginStNum">
					t2.beginStNum=#beginStNum#
				</isNotEmpty>
				<isNotEmpty prepend="and" property="endStNum">
					t2.endStNum=#$endStNum#
				</isNotEmpty>
				    ORDER BY ref.allocationTime desc
				) c
				GROUP BY c.deviceId
	</select>
	
	
	<select id="getDeviceId" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	    select  t1.id
				from sc_device t1
				where 1=1
				<isNotEmpty prepend="and" property="deviceName">
					t1.deviceName like '%$deviceName$%'
				</isNotEmpty>
	</select>
	
	
	<insert id="addDevice" parameterClass="java.util.Map">
	   insert INTO sc_device(
			segId,
			deviceName,
			operator,
			deviceType,
			frontDistance,
			height,
			width,
			isShake,
			ip,			
			remark,
			createTime,
			updateTime)
		VALUES
		(  
			#sId#,
		    #deviceName#,
		    #operator#,
		    #deviceType#,
		    #frontDistance#,
		    #height#,
		    #width#,
		    #isShake#,
		    #ip#,
		    #remark#,
		  	#createTime#,
		    #updateTime#
		)
	</insert>
	
	<delete id="deleteDevice" parameterClass="java.lang.String">
		delete from sc_device where id=#deviceId#
	</delete>
	
	<update id="modefyDevice" parameterClass="java.util.Map">
	 update sc_device
			set segId = #sId#,
			deviceName = #deviceName#,
			operator = #operator#,
			deviceType = #deviceType#,
			frontDistance = #frontDistance#,
			height = #height#,
			width = #width#,
			isShake = #isShake#,
			ip = #ip#,
			remark = #remark#,
			updateTime = #updateTime#
	where id=#id#
	
	</update>
	
	
	
	<insert id="addDevTask" parameterClass="java.util.Map">
	   insert INTO sc_taskDeviceRef(
			tid,
			devid,
			allocationTime)
		VALUES
		(  
			#tid#,
		    #devid#,
		  	#createTime#
		)
	</insert>
	<select id="getDevTask" parameterClass="java.lang.String" resultClass="java.lang.String">
	   SELECT tid FROM sc_taskDeviceRef where devid=#deviceId# order by allocationTime desc limit 1;
	</select>
	
	
 	<select id="findTypeDeviceByIp" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    select t1.id,t1.deviceName,t1.operator,t2.name,t1.frontDistance,
	    	   t1.height,t1.width,t1.isShake
				from sc_device t1
				join sc_dic t2 on t1.deviceType=t2.id
				where 1=1
				<isNotEmpty prepend="and" property="deviceIp">
					t1.ip = #deviceIp#
				</isNotEmpty>
				
	</select>
	
	<select id="findDeviceList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    select t1.id,t1.deviceName
				from sc_device t1
				join sc_dic t2 on t1.deviceType=t2.id
				order by t1.id desc
	</select>
		
	
	
	<select id="getDeviceData" parameterClass="java.util.Map" resultClass="java.lang.String">
	    select  count(1)
				from sc_device t1
				join sc_dic t2 on t1.deviceType=t2.id
				where 1=1
				<isNotEmpty prepend="and" property="deviceId">
					   t1.id=#deviceId#
				 </isNotEmpty>
				<isNotEmpty prepend="and" property="deviceName">
					   t1.deviceName like '%$deviceName$%'
				</isNotEmpty>
	</select> 
	
	
	
	<select id="getAllDevInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    select t1.id,t1.segId,tk.sName,t1.deviceName,t1.operator,t2.name,t1.frontDistance,
	    	   t1.height,t1.width,t1.isShake,t1.ip,t1.remark
			from sc_device t1
				join sc_dic t2 on t1.deviceType=t2.id
				left join sc_segment tk on t1.segId=tk.sid
				LEFT JOIN (select * from (select tid,devid from sc_taskdeviceref order by allocationTime desc) ttd group by ttd.devid) td on  t1.id=td.devid 
				where 1=1
				<isNotEmpty prepend="and" property="deviceType">
					 <isNotEqual property="deviceType" compareValue="0">
					   t1.deviceType=#deviceType#
					</isNotEqual>
				</isNotEmpty>
				<isNotEmpty prepend="and" property="deviceIp">
					t1.ip = #deviceIp#
				</isNotEmpty>
	</select>
	
	<select id="getAllPhoneOwnerInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	   select a.pid,a.phoneNum,a.ownerName,a.phoneType,b.isAccept from 
			sc_phoneinfo a,
			sc_phonetask b
			where a.pid=b.pid
				<isNotEmpty prepend="and" property="taskId">
					   b.tid=#taskId#
				</isNotEmpty>
	</select>
	
	<select id="getPhoneOwnerByDevId" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	  select a.pid,a.phoneNum,a.ownerName,a.phoneType,b.isAccept from 
			sc_phoneinfo a,
			sc_phonetask b,
			(select * from (select tid,devid from sc_taskdeviceref order by allocationTime desc) ttd group by ttd.devid) c
			where a.pid=b.pid
			and c.tid=b.tid
				<isNotEmpty prepend="and" property="deviceId">
					   c.devid=#deviceId#
				</isNotEmpty>
	</select>
	
	<select id="getDeviceInfoByTaskId" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	    select    
			   t1.id,t1.deviceName,t1.operator,t1.frontDistance,
	    	   t1.height,t1.width,t1.isShake,t1.ip,t1.remark,CONCAT(t1.createTime,'') as time
				from 
				(select * from (select tid,devid from sc_taskdeviceref order by allocationTime desc) ttd group by ttd.devid) a,
				sc_device t1
				where a.devid=t1.id
				<isNotEmpty prepend="and" property="taskId">
					a.tid = #taskId#
				</isNotEmpty>
				
	</select> 
</sqlMap>